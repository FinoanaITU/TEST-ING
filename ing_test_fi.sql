-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.auth_group
(
    id integer NOT NULL DEFAULT nextval('auth_group_id_seq'::regclass),
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_group_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.auth_group_permissions
(
    id bigint NOT NULL DEFAULT nextval('auth_group_permissions_id_seq'::regclass),
    group_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.auth_permission
(
    id integer NOT NULL DEFAULT nextval('auth_permission_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_permission_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.auth_user
(
    id integer NOT NULL DEFAULT nextval('auth_user_id_seq'::regclass),
    password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    CONSTRAINT auth_user_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.auth_user_groups
(
    id bigint NOT NULL DEFAULT nextval('auth_user_groups_id_seq'::regclass),
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.auth_user_user_permissions
(
    id bigint NOT NULL DEFAULT nextval('auth_user_user_permissions_id_seq'::regclass),
    user_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_admin_log
(
    id integer NOT NULL DEFAULT nextval('django_admin_log_id_seq'::regclass),
    action_time timestamp with time zone NOT NULL,
    object_id text COLLATE pg_catalog."default",
    object_repr character varying(200) COLLATE pg_catalog."default" NOT NULL,
    action_flag smallint NOT NULL,
    change_message text COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_content_type
(
    id integer NOT NULL DEFAULT nextval('django_content_type_id_seq'::regclass),
    app_label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT django_content_type_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_migrations
(
    id bigint NOT NULL DEFAULT nextval('django_migrations_id_seq'::regclass),
    app character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    applied timestamp with time zone NOT NULL,
    CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_session
(
    session_key character varying(40) COLLATE pg_catalog."default" NOT NULL,
    session_data text COLLATE pg_catalog."default" NOT NULL,
    expire_date timestamp with time zone NOT NULL,
    CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
);

CREATE TABLE IF NOT EXISTS public.user_coordinates
(
    id bigint NOT NULL DEFAULT nextval('user_coordinates_id_seq'::regclass),
    latitude double precision,
    longitude double precision,
    CONSTRAINT user_coordinates_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_dob
(
    id bigint NOT NULL DEFAULT nextval('user_dob_id_seq'::regclass),
    date timestamp with time zone NOT NULL,
    age smallint NOT NULL,
    CONSTRAINT user_dob_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_id
(
    id bigint NOT NULL DEFAULT nextval('user_id_id_seq'::regclass),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    value character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_id_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_location
(
    id bigint NOT NULL DEFAULT nextval('user_location_id_seq'::regclass),
    street character varying(50) COLLATE pg_catalog."default" NOT NULL,
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    state character varying(50) COLLATE pg_catalog."default" NOT NULL,
    postcode character varying(10) COLLATE pg_catalog."default" NOT NULL,
    coordinates_id bigint NOT NULL,
    timezone_id bigint NOT NULL,
    CONSTRAINT user_location_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_login
(
    id bigint NOT NULL DEFAULT nextval('user_login_id_seq'::regclass),
    uuid character varying(50) COLLATE pg_catalog."default" NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(50) COLLATE pg_catalog."default" NOT NULL,
    salt character varying(100) COLLATE pg_catalog."default" NOT NULL,
    md5 character varying(100) COLLATE pg_catalog."default" NOT NULL,
    sha1 character varying(100) COLLATE pg_catalog."default" NOT NULL,
    sha256 character varying(300) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_login_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_name
(
    id bigint NOT NULL DEFAULT nextval('user_name_id_seq'::regclass),
    title character varying(10) COLLATE pg_catalog."default" NOT NULL,
    first character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_name_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_picture
(
    id bigint NOT NULL DEFAULT nextval('user_picture_id_seq'::regclass),
    large character varying(200) COLLATE pg_catalog."default",
    medium character varying(200) COLLATE pg_catalog."default",
    thumbnail character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT user_picture_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_registered
(
    id bigint NOT NULL DEFAULT nextval('user_registered_id_seq'::regclass),
    date timestamp with time zone NOT NULL,
    age smallint NOT NULL,
    CONSTRAINT user_registered_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_timezone
(
    id bigint NOT NULL DEFAULT nextval('user_timezone_id_seq'::regclass),
    "offset" time without time zone NOT NULL,
    description character varying(500) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_timezone_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_usersinfo
(
    id bigint NOT NULL DEFAULT nextval('user_usersinfo_id_seq'::regclass),
    gender character varying(6) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(20) COLLATE pg_catalog."default",
    cell character varying(20) COLLATE pg_catalog."default",
    nat character varying(10) COLLATE pg_catalog."default" NOT NULL,
    dob_id bigint NOT NULL,
    id_info_id bigint NOT NULL,
    location_id bigint NOT NULL,
    login_id bigint NOT NULL,
    name_id bigint NOT NULL,
    picture_id bigint NOT NULL,
    registered_id bigint NOT NULL,
    CONSTRAINT user_usersinfo_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e
    ON public.auth_group_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_group_id_b120cbf9
    ON public.auth_group_permissions(group_id);


ALTER TABLE IF EXISTS public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_permission_content_type_id_2f476e4b
    ON public.auth_permission(content_type_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_group_id_97559544
    ON public.auth_user_groups(group_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_user_id_6a12ed8b
    ON public.auth_user_groups(user_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_permission_id_1fbb5f2c
    ON public.auth_user_user_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_user_id_a95ead1b
    ON public.auth_user_user_permissions(user_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb
    ON public.django_admin_log(content_type_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_user_id_c564eba6
    ON public.django_admin_log(user_id);


ALTER TABLE IF EXISTS public.user_location
    ADD CONSTRAINT user_location_coordinates_id_8fc3f2df_fk_user_coordinates_id FOREIGN KEY (coordinates_id)
    REFERENCES public.user_coordinates (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_location_coordinates_id_key
    ON public.user_location(coordinates_id);


ALTER TABLE IF EXISTS public.user_location
    ADD CONSTRAINT user_location_timezone_id_39c38028_fk_user_timezone_id FOREIGN KEY (timezone_id)
    REFERENCES public.user_timezone (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_location_timezone_id_key
    ON public.user_location(timezone_id);


ALTER TABLE IF EXISTS public.user_usersinfo
    ADD CONSTRAINT user_usersinfo_dob_id_8ff73d3f_fk_user_dob_id FOREIGN KEY (dob_id)
    REFERENCES public.user_dob (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_usersinfo_dob_id_key
    ON public.user_usersinfo(dob_id);


ALTER TABLE IF EXISTS public.user_usersinfo
    ADD CONSTRAINT user_usersinfo_id_info_id_f8c9bda7_fk_user_id_id FOREIGN KEY (id_info_id)
    REFERENCES public.user_id (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_usersinfo_id_info_id_key
    ON public.user_usersinfo(id_info_id);


ALTER TABLE IF EXISTS public.user_usersinfo
    ADD CONSTRAINT user_usersinfo_location_id_c05cf0cd_fk_user_location_id FOREIGN KEY (location_id)
    REFERENCES public.user_location (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_usersinfo_location_id_key
    ON public.user_usersinfo(location_id);


ALTER TABLE IF EXISTS public.user_usersinfo
    ADD CONSTRAINT user_usersinfo_login_id_1b7f8f80_fk_user_login_id FOREIGN KEY (login_id)
    REFERENCES public.user_login (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_usersinfo_login_id_key
    ON public.user_usersinfo(login_id);


ALTER TABLE IF EXISTS public.user_usersinfo
    ADD CONSTRAINT user_usersinfo_name_id_cc475082_fk_user_name_id FOREIGN KEY (name_id)
    REFERENCES public.user_name (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_usersinfo_name_id_key
    ON public.user_usersinfo(name_id);


ALTER TABLE IF EXISTS public.user_usersinfo
    ADD CONSTRAINT user_usersinfo_picture_id_2472e0df_fk_user_picture_id FOREIGN KEY (picture_id)
    REFERENCES public.user_picture (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_usersinfo_picture_id_key
    ON public.user_usersinfo(picture_id);


ALTER TABLE IF EXISTS public.user_usersinfo
    ADD CONSTRAINT user_usersinfo_registered_id_7eabb4e0_fk_user_registered_id FOREIGN KEY (registered_id)
    REFERENCES public.user_registered (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_usersinfo_registered_id_key
    ON public.user_usersinfo(registered_id);

END;